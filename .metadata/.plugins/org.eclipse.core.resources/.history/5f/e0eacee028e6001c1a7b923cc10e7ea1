package com.jafa.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.jafa.dto.Board;
import com.jafa.dto.Criteria;
import com.jafa.dto.PageMaker;
import com.jafa.service.BoardService;

@Controller
@RequestMapping("/board/")
public class BoardController {
	
	@Autowired
	private BoardService service;

	@GetMapping("/list")
	public String getBoardList(Criteria criteria, Model model) {
		PageMaker maker = new PageMaker();
		//페이지 메이커 객체 생성
		maker.setCriteria(criteria);
		//페이지메이커에 세리테이리아 객체 주입
		maker.setTotalCount(service.totalCount(criteria));
		//totalcaount 실행해서 페이지 값 넣기!
		System.out.println("시작페이지 : " + maker.getStartPage());
		System.out.println("끝 페이지 : " + maker.getEndPage());
		
		
		List<Board> list = service.getList(criteria);
		model.addAttribute("list", list);
		model.addAttribute("pageMaker", maker);
		//list.jsp에 pageMaker 값들 넘겨주기!
		return "board/list";
	}
	
	@GetMapping("/get")
	public String get(Long bno, Model model) {
		
		Board board = service.get(bno);
		model.addAttribute("board", board);
		
		return "board/get";
	}
	
	@PostMapping("/remove")
	public String delete(Long bno, RedirectAttributes rttr) {
		service.remove(bno);
		// redirect시에는 에트리뷰트가 안되서, rttr로 보내야만 데이터가 넘어감! 개꾸르!
		rttr.addFlashAttribute("message", bno + "번 섹자함");
		return "redirect:list";
	}
	
	@GetMapping("/register")
	public String registerFrom() {
		return "board/register";
	}
	
	@PostMapping("/register")
	public String register(Board board, RedirectAttributes rttr) {
		System.out.println(board.getTitle());
		System.out.println(board.getWriter());
		System.out.println(board.getContents());
		service.insert(board);
		rttr.addFlashAttribute("message", board.getBno() + "번 등럭함");
		return "redirect:list";
	}
	
	@GetMapping("/update")
	public String updateForm(Model model) {
		
		return "board/update";
	}
	
	@PostMapping("/update")
	public String update(Board board, RedirectAttributes rttr) {
		service.update(board);
		rttr.addFlashAttribute("message", board.getBno() + "번 수정함");
		return "redirect:list";
	}
	
	
}
